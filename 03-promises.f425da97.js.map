{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,SA2B1C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,aAAY,KACNH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlCbL,EAAWa,iBAAiB,UAE5B,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UAAYX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAWC,OAAOL,EAAMM,OAE5B,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EAEtCrB,EAAcqB,EAAGH,GACdI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA4B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA4B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,IAEhEgB,GAAYC,OAAOJ,EAAKK,OAG1BvB,EAAW8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formSubmit = document.querySelector('.form');\n\nformSubmit.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let newDelay = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    // console.log(amount.value);\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    newDelay += Number(step.value);\n    // console.log(newDelay);\n  }\n  formSubmit.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formSubmit","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","newDelay","Number","value","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.f425da97.js.map"}